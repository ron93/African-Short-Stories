{"version":3,"sources":["Components/StoryList.js","Components/AxisBottom.js","Components/AxisLeft.js","Components/Marks.js","Components/Stories.js","Components/useData.js","Components/Home.js","Components/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["StoryList","to","AxisBottom","xScale","innerHeight","ticks","map","tickValue","className","transform","y2","stroke","dy","style","textAnchor","y","AxisLeft","yScale","domain","x","bandwidth","Marks","data","xValue","yValue","d","width","height","margin","Country","Population","Stories","useState","setData","useEffect","csv","then","slice","useData","console","log","innerWidth","scaleBand","paddingInner","range","scaleLinear","max","Home","exact","path","component","NavBar","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.2b7838fa.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const StoryList = () => {\n  return (\n    <div>\n    <ul>\n              <li>\n      <Link to=\"/stories/#1\">World Population </Link>\n      </li>\n      <li>\n      <Link to=\"/stories/#2\">Stories</Link>\n      </li>\n      </ul>\n    </div>\n  );\n};\n","\nexport const AxisBottom = ({xScale,innerHeight}) => \n  xScale.ticks().map((tickValue) => (\n    <g className=\"tick\" key={tickValue} transform={`translate(${xScale(tickValue)},0)`}>\n      <line y2={innerHeight} stroke=\"black\" />\n      <text\n        dy=\"0.71em\"\n        style={{ textAnchor: \"middle\" }}\n        y={innerHeight + 4}\n      >\n        {tickValue}\n      </text>\n    </g>\n  ));\n","export const AxisLeft = ({ yScale }) =>\n  yScale.domain().map((tickValue) => (\n    <g className=\"tick\">\n    <text\n      key={tickValue}\n      dy=\"0.32em\"\n      x={-4}\n      y={yScale(tickValue) + yScale.bandwidth() / 2}\n      style={{ textAnchor: \"end\" }}\n    >\n      {tickValue}\n    </text>\n    </g>\n  ));\n","\nexport const Marks = ({data, xScale, yScale, xValue, yValue}) =>\ndata.map((d) => (\n  <rect \n  className=\"mark\"\n    key={yValue(d)}\n    x={0}\n    y={yScale(yValue(d))}\n    width={xScale(xValue(d))}\n    height={yScale.bandwidth()}\n\n  />\n));\n","import React from \"react\"\nimport {  scaleBand, scaleLinear, max  } from \"d3\";\n\nimport { useData } from \"./useData\";\nimport { AxisBottom } from \"./AxisBottom\";\nimport { AxisLeft } from \"./AxisLeft\";\nimport { Marks } from \"./Marks\";\n\nconst width = 960;\nconst height = 500;\nconst margin = { top: 20, right: 20, bottom: 70, left: 200 };\n\nconst yValue = d => d.Country;\nconst xValue =  d => d.Population;\n\nexport const Stories = () => {\n  const data = useData();\n\n  if (!data) {\n    return <pre>Loading...</pre>;\n  }\n\n  console.log(data[0]);\n\n  const innerHeight = height - margin.top - margin.bottom;\n  const innerWidth = width - margin.left - margin.right;\n\n  const yScale = scaleBand()\n    .paddingInner(0.1)\n    .domain(data.map(yValue))\n    .range([0, innerHeight]);\n\n  const xScale = scaleLinear()\n    .domain([0, max(data, xValue)])\n    .range([0, innerWidth]);\n\n  return (\n      \n      <svg width={width} height={height}>\n        <g transform={`translate(${margin.left},${margin.top} )`}>\n          {/* x axis ticks */}\n          <AxisBottom xScale={xScale} innerHeight={innerHeight} />\n\n          {/* y- axis ticks */}\n          <AxisLeft yScale={yScale} />\n\n          <text className=\"axis-label\" x={innerWidth / 2} y={innerHeight +55} textAnchor=\"middle\">World Population</text>\n          <Marks\n            data={data}\n            yScale={yScale}\n            xScale={xScale}\n            xValue={xValue}\n            yValue={yValue}\n          />\n        </g>\n      </svg>\n  );\n};\n","import  { useState, useEffect } from \"react\";\nimport { csv } from \"d3\";\nconst csvUrl =\n  \"https://gist.githubusercontent.com/performautodev/ab00b6300b1a235cde9c57600992b86d/raw/9c2f36181b2f090e91dac0b072405b6fe033e60d/UN_Population_2019.csv\";\n\n//useData hook\nexport const useData = () => {\n  const [data, setData] = useState(null);\n\nuseEffect(() => {\n  const row = (d) => {\n    d.Population = +d[\"2020\"];\n    return d;\n  };\n  csv(csvUrl, row).then((data) => {\n    setData(data.slice(0, 10));\n  });\n}, []);\nreturn data\n}","import { Switch,Route } from \"react-router-dom\";\n\nimport {StoryList} from \"./StoryList\";\nimport {Stories} from \"./Stories\";\n\n\nexport const Home = () => {\n  \n  // KEY used as mapped values unique identifier.\n\n  return (\n    <main>\n      <StoryList />\n      <Switch>\n        <Route exact path=\"#\" component={Stories}  />\n        <Route exact path=\"#\" component={Stories} />\n      </Switch>\n\n      \n    </main>\n  );\n};\n// const rootElement = document.getElementById('root');\n// ReactDOM.render(<App />, rootElement);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const NavBar = () => {\n  return (\n    <div>\n    <ul>\n              <li>\n      <Link to=\"/\">Home </Link>\n      </li>\n      <li>\n      <Link to=\"/stories\">Stories</Link>\n      </li>\n      </ul>\n    </div>\n  );\n};\n","import { Switch,Route } from \"react-router-dom\";\nimport \"./index.css\";\n\nimport {Home} from \"./Components/Home\";\nimport {NavBar} from \"./Components/NavBar\";\nimport {Stories} from \"./Components/Stories\";\n\n\nexport const App = () => {\n  \n  // KEY used as mapped values unique identifier.\n\n  return (\n    <main>\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/\" component={Home}  />\n        <Route exact path=\"/stories\" component={Stories} />\n      </Switch>\n\n      \n    </main>\n  );\n};\n// const rootElement = document.getElementById('root');\n// ReactDOM.render(<App />, rootElement);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\"\n\n\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App/>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}